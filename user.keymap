;; User keymap
;; -----------------------------
;; Keymaps are stored as a set of diffs that are merged together together
;; to create the final set of keys. You can modify these diffs to either add
;; or subtract bindings.
;;
;; Like behaviors, keys are bound by tag. When objects with those tags are active
;; the key bindings are live. Keys can be bound to any number of Light Table commands,
;; allowing you the flexibility to execute multiple operations together. To see a list
;; of all the commands you can execute, start typing a word related to the thing you
;; want to do in between the square brackets (e.g. type "editor").

{:+ {:app {"ctrl-shift-n" [:tabset.next]
           "ctrl-shift-p" [:tabset.prev]
           "ctrl-shift-w" [:workspace.show]
           "ctrl-shift-c" [:toggle-console]
           "ctrl-shift-a" [:workspace.add-folder]}
     :editor.keys.vim {"ctrl-l" [:paredit.grow.right]
                       "ctrl-h" [:paredit.grow.left]
                       "ctrl-k" [:paredit.select.parent]
                       "ctrl-j" [:paredit.select.clear]
                       "ctrl-d" [:editor.page-down]
                       "ctrl-u" [:editor.page-up]
                       "ctrl-shift-u" [:paredit.unwrap.parent]
                       "ctrl-1" [:paredit-plus.wrap-round]
                       "ctrl-2" [:paredit-plus.wrap-square]
                       "ctrl-3" [:paredit-plus.wrap-curly]
                       "ctrl-4" [:paredit-plus.wrap-quote]
                       "ctrl-shift-l" [:paredit.shrink.left]
                       "ctrl-shift-h" [:paredit.shrink.right]}
     :editor {"alt-w" [:editor.watch.watch-selection]
              "ctrl-shift-k" [:editor.sublime.selectLinesUpward]
              "ctrl-shift-j" [:editor.sublime.selectLinesDownward]
              "alt-shift-w" [:editor.watch.unwatch]
              "ctrl-shift-r" [:lt.plugins.reflow/reflow]}
     :editor.keys.normal {"ctrl-n" [:auto-complete]}}
 :- {:app {"pmeta-shift-n" [:window.new]}
     :editor.keys.normal {"tab" [:auto-complete]}}}
